// Generated documentation. Please do not edit.
:anchor_prefix: k8s-api

[id="{p}-api-reference"]
== API Reference

.Packages
- xref:{anchor_prefix}-policies-kubewarden-io-v1alpha1[$$policies.kubewarden.io/v1alpha1$$]
- xref:{anchor_prefix}-policies-kubewarden-io-v1alpha2[$$policies.kubewarden.io/v1alpha2$$]


[id="{anchor_prefix}-policies-kubewarden-io-v1alpha1"]
=== policies.kubewarden.io/v1alpha1

Package v1alpha1 contains API Schema definitions for the policies v1alpha1 API group

.Resource Types
- xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicy[$$ClusterAdmissionPolicy$$]
- xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicylist[$$ClusterAdmissionPolicyList$$]



[id="{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicy"]
==== ClusterAdmissionPolicy 

ClusterAdmissionPolicy is the Schema for the clusteradmissionpolicies API

.Appears In:
****
- xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicylist[$$ClusterAdmissionPolicyList$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `policies.kubewarden.io/v1alpha1`
| *`kind`* __string__ | `ClusterAdmissionPolicy`
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta[$$ObjectMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`spec`* __xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicyspec[$$ClusterAdmissionPolicySpec$$]__ | 
|===


[id="{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicylist"]
==== ClusterAdmissionPolicyList 

ClusterAdmissionPolicyList contains a list of ClusterAdmissionPolicy



[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `policies.kubewarden.io/v1alpha1`
| *`kind`* __string__ | `ClusterAdmissionPolicyList`
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#listmeta-v1-meta[$$ListMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`items`* __xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicy[$$ClusterAdmissionPolicy$$]__ | 
|===


[id="{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicyspec"]
==== ClusterAdmissionPolicySpec 

ClusterAdmissionPolicySpec defines the desired state of ClusterAdmissionPolicy

.Appears In:
****
- xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha1-clusteradmissionpolicy[$$ClusterAdmissionPolicy$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`module`* __string__ | Module is the location of the WASM module to be loaded. Can be a local file (file://), a remote file served by an HTTP server (http://, https://), or an artifact served by an OCI-compatible registry (registry://).
| *`settings`* __xref:{anchor_prefix}-k8s-io-apimachinery-pkg-runtime-rawextension[$$RawExtension$$]__ | Settings is a free-form object that contains the policy configuration values. x-kubernetes-embedded-resource: false
| *`apiGroups`* __string array__ | APIGroups is a list of API groups that this webhook should be registered against. Empty array or "*" means everything.
| *`apiVersions`* __string array__ | APIVersions is a list of API versions that this webhook should be registered against. Empty array or "*" means everything.
| *`resources`* __string array__ | Resources is a list of resource types that this webhook should be registered against. Empty array or "*" means everything.
| *`operations`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#operationtype-v1-admissionregistration[$$OperationType$$] array__ | Operations is a list of operations that this webhook should be registered against. Empty array or "*" means everything.
| *`failurePolicy`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#failurepolicytype-v1-admissionregistration[$$FailurePolicyType$$]__ | FailurePolicy defines how unrecognized errors and timeout errors from the policy are handled. Allowed values are "Ignore" or "Fail". * "Ignore" means that an error calling the webhook is ignored and the API   request is allowed to continue. * "Fail" means that an error calling the webhook causes the admission to   fail and the API request to be rejected. The default behaviour is "Fail"
| *`mutating`* __boolean__ | Mutating indicates whether a policy has the ability to mutate incoming requests or not.
| *`matchPolicy`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#matchpolicytype-v1-admissionregistration[$$MatchPolicyType$$]__ | matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent". 
 - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook. 
 - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook. 
 Defaults to "Equivalent"
| *`namespaceSelector`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#labelselector-v1-meta[$$LabelSelector$$]__ | NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook. 
 For example, to run the webhook on any objects whose namespace is not associated with "runlevel" of "0" or "1";  you will set the selector as follows: "namespaceSelector": {   "matchExpressions": [     {       "key": "runlevel",       "operator": "NotIn",       "values": [         "0",         "1"       ]     }   ] } 
 If instead you want to only run the webhook on any objects whose namespace is associated with the "environment" of "prod" or "staging"; you will set the selector as follows: "namespaceSelector": {   "matchExpressions": [     {       "key": "environment",       "operator": "In",       "values": [         "prod",         "staging"       ]     }   ] } 
 See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors. 
 Default to the empty LabelSelector, which matches everything.
| *`objectSelector`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#labelselector-v1-meta[$$LabelSelector$$]__ | ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.
| *`sideEffects`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#sideeffectclass-v1-admissionregistration[$$SideEffectClass$$]__ | SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.
| *`timeoutSeconds`* __integer__ | TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
|===





[id="{anchor_prefix}-policies-kubewarden-io-v1alpha2"]
=== policies.kubewarden.io/v1alpha2

Package v1alpha2 contains API Schema definitions for the policies v1alpha2 API group

.Resource Types
- xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicy[$$ClusterAdmissionPolicy$$]
- xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicylist[$$ClusterAdmissionPolicyList$$]



[id="{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicy"]
==== ClusterAdmissionPolicy 

ClusterAdmissionPolicy is the Schema for the clusteradmissionpolicies API

.Appears In:
****
- xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicylist[$$ClusterAdmissionPolicyList$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `policies.kubewarden.io/v1alpha2`
| *`kind`* __string__ | `ClusterAdmissionPolicy`
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#objectmeta-v1-meta[$$ObjectMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`spec`* __xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicyspec[$$ClusterAdmissionPolicySpec$$]__ | 
|===


[id="{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicylist"]
==== ClusterAdmissionPolicyList 

ClusterAdmissionPolicyList contains a list of ClusterAdmissionPolicy



[cols="25a,75a", options="header"]
|===
| Field | Description
| *`apiVersion`* __string__ | `policies.kubewarden.io/v1alpha2`
| *`kind`* __string__ | `ClusterAdmissionPolicyList`
| *`metadata`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#listmeta-v1-meta[$$ListMeta$$]__ | Refer to Kubernetes API documentation for fields of `metadata`.

| *`items`* __xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicy[$$ClusterAdmissionPolicy$$]__ | 
|===


[id="{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicyspec"]
==== ClusterAdmissionPolicySpec 

ClusterAdmissionPolicySpec defines the desired state of ClusterAdmissionPolicy

.Appears In:
****
- xref:{anchor_prefix}-github-com-kubewarden-kubewarden-controller-apis-policies-v1alpha2-clusteradmissionpolicy[$$ClusterAdmissionPolicy$$]
****

[cols="25a,75a", options="header"]
|===
| Field | Description
| *`module`* __string__ | Module is the location of the WASM module to be loaded. Can be a local file (file://), a remote file served by an HTTP server (http://, https://), or an artifact served by an OCI-compatible registry (registry://).
| *`settings`* __xref:{anchor_prefix}-k8s-io-apimachinery-pkg-runtime-rawextension[$$RawExtension$$]__ | Settings is a free-form object that contains the policy configuration values. x-kubernetes-embedded-resource: false
| *`rules`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#rulewithoperations-v1-admissionregistration[$$RuleWithOperations$$] array__ | Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule.
| *`failurePolicy`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#failurepolicytype-v1-admissionregistration[$$FailurePolicyType$$]__ | FailurePolicy defines how unrecognized errors and timeout errors from the policy are handled. Allowed values are "Ignore" or "Fail". * "Ignore" means that an error calling the webhook is ignored and the API   request is allowed to continue. * "Fail" means that an error calling the webhook causes the admission to   fail and the API request to be rejected. The default behaviour is "Fail"
| *`mutating`* __boolean__ | Mutating indicates whether a policy has the ability to mutate incoming requests or not.
| *`matchPolicy`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#matchpolicytype-v1-admissionregistration[$$MatchPolicyType$$]__ | matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent". 
 - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook. 
 - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook. 
 Defaults to "Equivalent"
| *`namespaceSelector`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#labelselector-v1-meta[$$LabelSelector$$]__ | NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector. If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook. 
 For example, to run the webhook on any objects whose namespace is not associated with "runlevel" of "0" or "1";  you will set the selector as follows: "namespaceSelector": {   "matchExpressions": [     {       "key": "runlevel",       "operator": "NotIn",       "values": [         "0",         "1"       ]     }   ] } 
 If instead you want to only run the webhook on any objects whose namespace is associated with the "environment" of "prod" or "staging"; you will set the selector as follows: "namespaceSelector": {   "matchExpressions": [     {       "key": "environment",       "operator": "In",       "values": [         "prod",         "staging"       ]     }   ] } 
 See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels for more examples of label selectors. 
 Default to the empty LabelSelector, which matches everything.
| *`objectSelector`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#labelselector-v1-meta[$$LabelSelector$$]__ | ObjectSelector decides whether to run the webhook based on if the object has matching labels. objectSelector is evaluated against both the oldObject and newObject that would be sent to the webhook, and is considered to match if either object matches the selector. A null object (oldObject in the case of create, or newObject in the case of delete) or an object that cannot have labels (like a DeploymentRollback or a PodProxyOptions object) is not considered to match. Use the object selector only if the webhook is opt-in, because end users may skip the admission webhook by setting the labels. Default to the empty LabelSelector, which matches everything.
| *`sideEffects`* __link:https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#sideeffectclass-v1-admissionregistration[$$SideEffectClass$$]__ | SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.
| *`timeoutSeconds`* __integer__ | TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
|===




